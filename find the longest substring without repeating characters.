

public static void printMaxLength(String s) {
    String longestSubstring = "";
    int longestSubstringLength = 0;
    Map<Character, Integer> map = new LinkedHashMap<>();
    char[] arr = s.toCharArray();
    int startOfLongest = 0;

    for (int i = 0; i < arr.length; i++) {
        char ch = arr[i];

        if (!map.containsKey(ch)) {
            map.put(ch, i);
        } else {
            i = map.get(ch); // Skip to the index after the last occurrence of 'ch'
            map.clear(); // Clear the map for the next substring
        }

        if (map.size() > longestSubstringLength) {
            longestSubstringLength = map.size();
            startOfLongest = i - longestSubstringLength + 1;
            longestSubstring = s.substring(startOfLongest, startOfLongest + longestSubstringLength);
        }
    }

    System.out.println(longestSubstringLength);
    System.out.println(longestSubstring);
}
